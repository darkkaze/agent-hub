apiVersion: batch/v1
kind: Job
metadata:
  name: db-init
  namespace: "${NAMESPACE}"
  labels:
    app: db-init
spec:
  template:
    metadata:
      labels:
        app: db-init
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-postgres
          image: postgres:15-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgres -p 5432 -U ${POSTGRES_USER}; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
      containers:
        - name: db-init
          image: ghcr.io/darkkaze/chat-agent-hub-backend:latest
          imagePullPolicy: Always
          command: ["./entrypoint.sh"]
          args: ["manage_init_db"]
          env:
            - name: DB_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DB_BACKEND
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: POSTGRES_PORT
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: REDIS_PORT
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: REDIS_DB
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: ENVIRONMENT
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
