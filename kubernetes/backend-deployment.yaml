apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: "${NAMESPACE}"
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
        - sh
        - -c
        - |
          until pg_isready -h postgres -p 5432 -U ${POSTGRES_USER}; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
      - name: wait-for-redis
        image: redis:7-alpine
        command:
        - sh
        - -c
        - |
          until redis-cli -h redis ping; do
            echo "Waiting for Redis..."
            sleep 2
          done
      containers:
      - name: backend
        image: ghcr.io/darkkaze/chat-agent-hub-backend:latest
        command: ["./entrypoint.sh"]
        args: ["fastapi"]
        ports:
        - containerPort: 8000
        env:
        - name: DB_BACKEND
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_BACKEND
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: POSTGRES_PORT
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: REDIS_PORT
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: REDIS_DB
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: ENVIRONMENT
        resources:
          requests:
            memory: "256Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5